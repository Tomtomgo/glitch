precision mediump float;
uniform vec2 resolution;
uniform float time;

uniform int offset;
uniform int variation;
uniform int bend;

uniform int imageData[10];

void main(){
    
  /*offset_4 = offset*4
  variation_4 = variation*4

  currentLine = 1
  t = 0
  widest_pixel = (dCanvasWidth*4)-1

  for e,i in data
    
    if variation!=0
      data[i+variation] = data[i+(variation_4)] if ((i&3) is 0)
      # & 3 means % 4

    if offset!=0
      data[i-offset] = data[i+(offset_4)] if ((i&3) is 0)

    if bend != 0 and ((i&3) is 0)
      o = @sineMemo_20[t]
      data[i+1] = data[i+1+o]
    
    if bend != 0 and i % widest_pixel == 0
      t+=1
    */
  vec2 p = ( gl_FragCoord.xy / resolution.xy );
  gl_FragColor = vec4(10.0, 10.0, (1.+cos(1./1000.))/2., 1.0);
}